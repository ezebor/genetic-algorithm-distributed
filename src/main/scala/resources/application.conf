mainConfig {
    akka {
        actor {
            provider = cluster
            allow-java-serialization = on
        }

        remote {
            artery {
                advanced.maximum-frame-size = 30000000
                advanced.receive-buffer-size = 30000000
                advanced.send-buffer-size = 30000000
                enabled = on
                transport = aeron-udp
                canonical.hostname = "localhost"
                      advanced { # IMPORTANT: this is to allow sending a lot of messages to actors (default is ~3000)
                        outbound-message-queue-size = 1000000
                      }
            }
        }

        cluster {
            failure-detector.acceptable-heartbeat-pause = 10s
            seed-nodes = [
                "akka://GeneticAlgorithmSystem@localhost:2561",
                "akka://GeneticAlgorithmSystem@localhost:2551"
            ]
        }
    }
}

masterRouterConfig {
    akka {
        actor.deployment {
            /evolutionRouter {
                router = round-robin-pool

                cluster {
                    enabled = on
                    allow-local-routees = on
                }
            }
        }
    }
}

executeBasketSerializationConfig {
    akka.actor {
        serializers {
            java = "akka.serialization.JavaSerializer"
            jsonSerializer = "domain.serializers.ExecuteBasketJsonSerializer"
        }

        serialization-bindings {
            "domain.Execute" = jsonSerializer
            "akka.remote.DaemonMsgCreate" = java
        }
    }
}

executeImagesSimilaritiesSerializationConfig {
    akka.actor {
        serializers {
            java = "akka.serialization.JavaSerializer"
            jsonSerializer = "domain.serializers.ExecuteImagesSimilaritiesJsonSerializer"
        }

        serialization-bindings {
            "domain.Execute" = jsonSerializer
            "akka.remote.DaemonMsgCreate" = java
        }
    }
}

testConfig {
    akka {
        test {
            single-expect-default = 1s
        }
    }
}